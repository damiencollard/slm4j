Starschema License Manager for java (slm4j)
=========

**GOAL**
> This fork aims to introduce the ability to verify a license
> from a stream and to fix other shortcomings of the API...

---

Slm4j project aimed to provide an easy-to-use, easy-to-implement license
manager system for java projects.

Basic functionality
-------------------

The project includes a command line tool to generate private and public
keys for cryptographical signing, and a runtime class (or jar module) to
validate the generated keys.

The signed data is an ASCII armored file, which could store date or time
limitations, functionality restrictions or any user specified strings.
The embedded license file validator ensures that file is not modified by
using DSA algorythm.

Command line usage
------------------

First, create the wrapper script by issuing command `sbt mksh` which creates
script `bin/slm4j.sh`.

Get usage help with option `--help`:

    $ bin/slm4j.sh --help

To create a private/public key pair in files `test1` and `test1.pub`, respectively:

    $ bin/slm4j.sh genkeys --base-name test1

To sign file `unsigned.txt` using private key `test1` and write the result to `signed.txt`.

    $ bin/slm4j.sh sign --private-key test1 --input unsigned.txt --output signed.txt

To verify that signed file `signed.txt` is valid (*i.e.*, has not been tampered with):

    $ bin/slm4j.sh verify --public-key test1.pub --input signed.txt
    License is valid.
    $ echo $?
    0

Let's check what happens if we modify a signed file:

    $ cp signed.txt tamperedWith.txt
    $ vim tamperedWith.txt
    $ bin/slm4j.sh verify --public-key test1.pub --input tamperedWith.txt
    License is NOT valid.
    $ echo $?
    2

Usage from java programs
------------------------

To validate a user supplied license file in your application, you must include
your public key file in the binary distribution (eg. in a resource file or in
a hardcoded static private string in your license handler class) and import
`SignatureValidator`.

To check the input license file, issue:

**FIXME** Update to modified API.

```java
     private static final String PUBLIC_KEY = "...";

     try {
       SignatureValidator validator = new SignatureValidator();

       if (validator.verifyLicenseWithString( PUBLIC_KEY, fileToValidate))
         System.out.println("License is valid");
         System.out.println("Registred to: " + validator.getLicenseOptions().get("RegistredTo") );
       } else {
         System.out.println("License is not valid");
       }
     } catch (SlmException ex) {
       System.out.println("Can not load license information: " + ex.getMessage() );
     }
```

For more information please refer to included javadocs.

Example license file
--------------------

The following file was generated by slm4j:

    ----- BEGIN LICENSE -----
    RegistredTo=John Smith
    ExpirationDate=20090630
    Version=Full
    ----- END LICENSE -----
    ----- BEGIN SIGNATURE -----
    MCwCFCKRoTnYFdE7JJzH
    W2XQddSq9wqCR43hRQ+J
    BZV5FS+ZU5j90JAZFUA2
    WQ==
    ----- END SIGNATURE -----

Any changes in license data will cause an invalid license exception.

  * [This slm4j on GitHub](https://github.com/damiencollard/slm4j)
  * [Original slm4j on GitHub](http://github.com/starschema/slm4j/)
